package main

import (
	"fmt"
	"strconv"
)

func main()  {
	lange := []string{"python","go", "c", "js"}
	compiledLange := lange [1:3]//–≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏–∑ —Å—Ä–µ–∑–∞
	fmt.Println(lange)//—Å—Ä–µ–∑
	fmt.Println(compiledLange)//–ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ
	students:= []string{"mary", "cary","sonya", "petro", "vedro","mark"}//–∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã–π –ª–∏—Ç–µ—Ä–∞–ª
	//students2 := make([]string,0,0)//—Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–∞–π—Å–∞ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é make
	studentsSubslice := students[3:]
	fmt.Println(studentsSubslice)
	studentsSubslice[1]="aleks"
	fmt.Println(students, studentsSubslice)
	var b byte = 255
	fmt.Printf("%b\n",b)
	var c byte = 65
	fmt.Printf("%b\n",c)
	var d byte = 2
	fmt.Printf("%b\n",d)
	hello :="hello"
	helloBiteSlice:=[]byte(hello)
	fmt.Println(helloBiteSlice)
	por := 123456
	por2 := strconv.Itoa(por)
	fmt.Println(por2)
	por3 := []byte(por2)
	fmt.Println(por3)
	for i := 0; i < len(por3); i++ {
		var pol byte = por3[i]
		fmt.Printf("%b\n",pol)
	}
	hi:="–ø—Ä–∏–≤–µ—Ç"
	por4 := []byte(hi)
	for i := 0; i < len(por4); i++ {
		var pol byte = por4[i]
		fmt.Printf("%b\n",pol)
	}
	const lol = "ü§£"//—Ä—É–Ω–∞

	fmt.Printf("%s\n",lol)//–∑–∞–ø—Ä–∏–Ω—Ç–∏–ª–∏ –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
	fmt.Printf("%+q\n",lol)// –∑–∞–ø—Ä–∏–Ω—Ç–∏–ª–∏ –∫–∞–∫ –∫–æ–¥–æ–≤—É—é —Ç–æ—á–∫—É —é–Ω–∏–∫–æ–¥–∞
	for i := 0; i < len(lol); i++ {
		fmt.Printf("%x\n",lol[i])//—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–∏—Ä–µ—á–∏–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –±–∞–π—Ç –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ–∏—Ç —Å–º–∞–π–ª–∏–∫
		fmt.Printf("%b\n",lol[i])

	}
	fmt.Printf("\n")
	character := '—Ñ'
	fmt.Println(character)
	fmt.Println(string(character))
	str := "–ø—Ä–∏–≤–µ—Ç"
	for i := 0; i < len(str); i++ {
		fmt.Printf("%d ",str[i])//–ø–µ—á–∞—Ç–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –±–∞–π—Ç–æ–≤
		}
	for i := 0; i < len(str); i++ {
		fmt.Printf("%b ", str[i])// –ø–µ—á–∞—Ç–∞–µ–º –±–∞–π—Ç—ã –ø–æ–±–∏—Ç–æ–≥–æ
	}
	strrune := []rune(str)
	for _, r := range strrune {
		fmt.Println(r, string(r))//–ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –≤ —é–Ω–∏–∫–æ–¥—É utf 8 –∏ —Å–∞–º–∏ —Ä—É–Ω—ã
	}
}
